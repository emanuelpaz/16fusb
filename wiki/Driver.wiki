#summary Driver install

= Driver =

For communication between a USB device and the host computer, obviously, we need an application and a driver on the operating system to interface with this device. In the 16FUSB case, the driver used for both Windows and Linux is the libusb. The libusb is a driver/library that provides access to USB devices for user-level applications. With libusb is possible to exchange messages between your application and the USB hardware without the need to write a specific driver for your device. Its API is very straightforward and easy to use. Don't miss http://www.libusb.org/  to understand more about the project.<br><br>
 

===Windows environment===

====For both runtime and development environment:====
 * *Download the 16FUSB device driver:* <br>[http://16fusb.googlecode.com/files/16FUSB_driver-libusb-win32-1.2.6.0.zip]<br>

 * *Install the device driver:* <br>Press *Win+R*, type *'hdwwiz'* and click *'Next'*. Choose *'Install the hardware that I manually select form a list (Advanced)'* and click *'Next'* again. Just leave the option *'Show All Devices'* go *'Next'* button. Click *'Have Disk'* button and browse to the folder you extracted the driver then choose *'16FUSB'* and click *'Next'*. Windows will warn you about driver verification. Choose *'Install Driver Anyway'* to authorize driver install. Click on the *'Finish'* to close the wizard.<br>

====For development environment only:====

 * Copy the include file 'lusb0_usb.h' (found in the device driver package) into the Microsoft SDK's include directory.
 * Copy the file 'libusb.lib' (also found in the device driver package) into Microsoft SDK's lib directory or into your IDE lib directory.
 * Install the filter driver [http://sourceforge.net/projects/libusb-win32/files/libusb-win32-releases/ libusb -win32-filter-devel-xxxx.exe]. The version of the filter driver must match the version of device driver. This step is optional.